{"ast":null,"code":"import _slicedToArray from \"/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Ripple(props) {\n  var className = props.className,\n      classes = props.classes,\n      _props$pulsate = props.pulsate,\n      pulsate = _props$pulsate === void 0 ? false : _props$pulsate,\n      rippleX = props.rippleX,\n      rippleY = props.rippleY,\n      rippleSize = props.rippleSize,\n      inProp = props[\"in\"],\n      onExited = props.onExited,\n      timeout = props.timeout;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      leaving = _React$useState2[0],\n      setLeaving = _React$useState2[1];\n\n  var rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  var rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n\n  React.useEffect(function () {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      var timeoutId = setTimeout(onExited, timeout);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: childClassName\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  \"in\": PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","map":{"version":3,"sources":["/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/node_modules/@mui/material/ButtonBase/Ripple.js"],"names":["React","PropTypes","clsx","jsx","_jsx","Ripple","props","className","classes","pulsate","rippleX","rippleY","rippleSize","inProp","onExited","timeout","useState","leaving","setLeaving","rippleClassName","ripple","rippleVisible","ripplePulsate","rippleStyles","width","height","top","left","childClassName","child","childLeaving","childPulsate","useEffect","timeoutId","setTimeout","clearTimeout","undefined","style","children","process","env","NODE_ENV","propTypes","object","isRequired","string","bool","func","number"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Ripple(props) {\n  const {\n    className,\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited,\n    timeout\n  } = props;\n  const [leaving, setLeaving] = React.useState(false);\n  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n\n  React.useEffect(() => {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      const timeoutId = setTimeout(onExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: childClassName\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;"]},"metadata":{},"sourceType":"module"}