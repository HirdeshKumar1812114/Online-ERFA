{"ast":null,"code":"import _defineProperty from \"/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/src/views/Login/adminLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/bg7.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nexport default function LoginPage(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valid = _useState6[0],\n      setValid = _useState6[1];\n\n  var handleChange = function handleChange(e) {\n    // console.log(e.target.name, e.target.value);\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    _this.setState(_defineProperty({}, name, value));\n  }; // const submitData = (e) => {\n  //     e.preventDefault();\n  //     if (username !== '' && password !== '' ) {\n  //       setState({ valid: true })\n  //        api.post('add-vaccinationCenter', {centername, city, address, capacity, allCenters, sector}).then(result => {\n  //             window.alert(\"New Center Added\");\n  //             setState({ userRegistered: true })\n  //         }).catch(err => {\n  //           console.log(err)\n  //           window.alert(`Unable to create user ${err}`)\n  //           setState({ userRegistered: false })\n  //         })\n  //     } else {\n  //       window.alert('Please fill all the fields')\n  //      setState({ formIsFilled: false })\n  //     }\n  //   }\n\n\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pageHeader,\n      style: {\n        backgroundImage: \"url(\" + image + \")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"top center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(GridContainer, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes[cardAnimaton],\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                className: classes.form,\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  color: \"success\",\n                  className: classes.cardHeader,\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"ERFA Admin Portal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.divider,\n                  children: \"Enter your Credentials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Username\",\n                    id: \"username\",\n                    onChange: function onChange(e) {\n                      window.alert(e.v);\n                    },\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      type: \"text\",\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(People, {\n                          className: classes.inputIconsColor\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 105,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 53\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Password\",\n                    id: \"pass\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      type: \"password\",\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(Icon, {\n                          className: classes.inputIconsColor,\n                          children: \"lock_outline\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 122,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 53\n                      }, this),\n                      autoComplete: \"off\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                  className: classes.cardFooter,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    simple: true,\n                    color: \"primary\",\n                    size: \"lg\",\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"prev\", {\n      children: JSON.stringify(username, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"prev\", {\n      children: JSON.stringify(password, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"lLL8gvw4QPFQxzXkIqwfrMjJIwM=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/src/views/Login/adminLogin.js"],"names":["React","useState","useEffect","makeStyles","InputAdornment","Icon","Email","People","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","useStyles","LoginPage","props","username","setUsername","password","setPassword","valid","setValid","handleChange","e","target","name","value","setState","cardAnimaton","setCardAnimation","setTimeout","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","divider","window","alert","v","fullWidth","type","endAdornment","inputIconsColor","autoComplete","cardFooter","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\n\nimport image from \"assets/img/bg7.jpg\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage(props) {\n      \n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [valid, setValid] = useState('')\n\n    const handleChange = (e) => {\n        // console.log(e.target.name, e.target.value);\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n\n    }\n    // const submitData = (e) => {\n    //     e.preventDefault();\n    //     if (username !== '' && password !== '' ) {\n    //       setState({ valid: true })\n    //        api.post('add-vaccinationCenter', {centername, city, address, capacity, allCenters, sector}).then(result => {\n             \n    //             window.alert(\"New Center Added\");\n    //             setState({ userRegistered: true })\n              \n    //         }).catch(err => {\n    //           console.log(err)\n    //           window.alert(`Unable to create user ${err}`)\n    //           setState({ userRegistered: false })\n    //         })\n         \n    \n    //     } else {\n    //       window.alert('Please fill all the fields')\n    \n    //      setState({ formIsFilled: false })\n    //     }\n    \n    \n    \n    //   }\n\n    const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n    setTimeout(function () {\n        setCardAnimation(\"\");\n    }, 700);\n    const classes = useStyles();\n    const { ...rest } = props;\n    return (\n        <div>\n          \n            <div\n                className={classes.pageHeader}\n                style={{\n                    backgroundImage: \"url(\" + image + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"top center\",\n                }}\n            >\n                <div className={classes.container}>\n                    <GridContainer justify=\"center\">\n                        <GridItem xs={12} sm={12} md={4}>\n                            <Card className={classes[cardAnimaton]}>\n                                <form className={classes.form}>\n                                    <CardHeader color=\"success\" className={classes.cardHeader}>\n                                        <h3>ERFA Admin Portal</h3>\n                                    </CardHeader>\n                                    <p className={classes.divider}>Enter your Credentials</p>\n                                    <CardBody>\n                                        <CustomInput\n                                            labelText=\"Username\"\n                                            id=\"username\"\n                                            onChange={e=>{window.alert(e.v)}}\n                                         \n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                            inputProps={{\n                                                \n                                                type: \"text\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <People className={classes.inputIconsColor} />\n                                                    \n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                            \n                                        />\n                                        <CustomInput\n                                            labelText=\"Password\"\n                                            id=\"pass\"\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                            inputProps={{\n                                                type: \"password\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Icon className={classes.inputIconsColor}>\n                                                            lock_outline\n                                                        </Icon>\n                                                    </InputAdornment>\n                                                ),\n                                                autoComplete: \"off\",\n                                            }}\n                                        />\n                                    </CardBody>\n                                    <CardFooter className={classes.cardFooter}>\n                                        <Button simple color=\"primary\" size=\"lg\">\n                                            Login\n                                        </Button>\n                                    </CardFooter>\n                                </form>\n                            </Card>\n                        </GridItem>\n                    </GridContainer>\n                </div>\n               \n            </div>\n            <prev >{JSON.stringify(username, null, 2)}</prev>\n            <prev>{JSON.stringify(password, null, 2)}</prev>\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}