{"ast":null,"code":"import _slicedToArray from \"/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/src/views/Login/adminLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\"; // core components\n\nimport Alert from '@mui/material/Alert';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/bg7.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nexport default function LoginPage(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valid = _useState6[0],\n      setValid = _useState6[1];\n\n  var submitData = function submitData(e) {\n    e.preventDefault();\n\n    if (username !== '' && password !== '') {\n      setValid(\"true\"); //    api.post('login', {username, password}).then(result => {\n      //         window.alert(\"Login\");\n      //     }).catch(err => {\n      //       console.log(err)\n      //       window.alert(`Invalid Credentials ${err}`)\n      //     })\n\n      if (username == 'admin' && password == 'admin') {\n        setValid(\"true\"); // window.alert('Welcome to Admin Portal')\n\n        alert();\n      } else {\n        setValid(\"false\"); // window.alert('Invalid Credentials')\n\n        alert();\n      }\n    } else {\n      // window.alert('Please fill all the fields')\n      setValid(\"incomplete\");\n      alert();\n    }\n\n    alert();\n  };\n\n  var alert = function alert() {\n    if (valid != \"\") {\n      if (valid == \"true\") {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: function onClose() {\n            setValid(\"\");\n          },\n          severity: \"success\",\n          children: [\"OK - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Login Successful. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 83\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, _this);\n      } else if (valid == \"false\") {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: function onClose() {\n            setValid(\"\");\n          },\n          severity: \"error\",\n          children: [\"ERROR \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Invalid Credentials!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 88\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, _this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: function onClose() {\n            setValid(\"\");\n          },\n          severity: \"warning\",\n          children: [\"ALERT \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Please fill all fields!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 90\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, _this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [alert(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pageHeader,\n      style: {\n        backgroundImage: \"url(\" + image + \")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"top center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(GridContainer, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes[cardAnimaton],\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                className: classes.form,\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  color: \"success\",\n                  className: classes.cardHeader,\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"ERFA Admin Portal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.divider,\n                  children: \"Enter your Credentials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Username\",\n                    id: \"username\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      onChange: function onChange(event) {\n                        return setUsername(event.target.value);\n                      },\n                      type: \"text\",\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(People, {\n                          className: classes.inputIconsColor\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 53\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Password\",\n                    id: \"pass\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      onChange: function onChange(event) {\n                        return setPassword(event.target.value);\n                      },\n                      type: \"password\",\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(Icon, {\n                          className: classes.inputIconsColor,\n                          children: \"lock_outline\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 146,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 53\n                      }, this),\n                      autoComplete: \"off\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                  className: classes.cardFooter,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    simple: true,\n                    color: \"primary\",\n                    size: \"lg\",\n                    onClick: submitData,\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"lLL8gvw4QPFQxzXkIqwfrMjJIwM=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/mustafa/MyWork(HDD)/Mustafa Uni/7th Semester/Fyp Work/Project Repo/Online ERFA/admin/main/src/views/Login/adminLogin.js"],"names":["React","useState","useEffect","makeStyles","InputAdornment","Icon","Email","People","Alert","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","useStyles","LoginPage","props","username","setUsername","password","setPassword","valid","setValid","submitData","e","preventDefault","alert","cardAnimaton","setCardAnimation","setTimeout","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","divider","fullWidth","onChange","event","target","value","type","endAdornment","inputIconsColor","autoComplete","cardFooter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport Alert from '@mui/material/Alert';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\n\nimport image from \"assets/img/bg7.jpg\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage(props) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [valid, setValid] = useState('')\n\n\n    const submitData = (e) => {\n        e.preventDefault();\n        if (username !== '' && password !== '') {\n            setValid(\"true\")\n            //    api.post('login', {username, password}).then(result => {\n            //         window.alert(\"Login\");\n            //     }).catch(err => {\n            //       console.log(err)\n            //       window.alert(`Invalid Credentials ${err}`)\n            //     })\n\n            if (username == 'admin' && password == 'admin') {\n                setValid(\"true\")\n                // window.alert('Welcome to Admin Portal')\n                alert()\n\n            } else {\n                setValid(\"false\")\n                // window.alert('Invalid Credentials')\n                alert()\n\n            }\n\n        } else {\n            // window.alert('Please fill all the fields')\n            setValid(\"incomplete\")\n            alert()\n\n        }\n        alert()\n\n    }\n    const alert = () => {\n        if (valid != \"\") {\n            if (valid == \"true\") {\n                return (\n                    <Alert onClose={() => {setValid(\"\")}} severity=\"success\">OK - <strong>Login Successful. </strong></Alert>\n                )\n            }\n            else if (valid == \"false\") {\n\n                return (<Alert onClose={() => {setValid(\"\")}} severity=\"error\">ERROR — <strong>Invalid Credentials!</strong></Alert>)\n            }\n            else {\n                return (<Alert onClose={() => {setValid(\"\")}} severity=\"warning\">ALERT — <strong>Please fill all fields!</strong></Alert>)\n            }\n        }\n        else {\n            return (\n                <>\n                </>)\n        }\n    }\n\n    const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n    setTimeout(function () {\n        setCardAnimation(\"\");\n    }, 700);\n    const classes = useStyles();\n    const { ...rest } = props;\n    return (\n        <div>\n            {alert()}\n\n            <div\n                className={classes.pageHeader}\n                style={{\n                    backgroundImage: \"url(\" + image + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"top center\",\n                }}\n            >\n\n\n                <div className={classes.container}>\n                    <GridContainer justify=\"center\">\n                        <GridItem xs={12} sm={12} md={4}>\n                            <Card className={classes[cardAnimaton]}>\n                                <form className={classes.form}>\n                                    <CardHeader color=\"success\" className={classes.cardHeader}>\n                                        <h3>ERFA Admin Portal</h3>\n                                    </CardHeader>\n                                    <p className={classes.divider}>Enter your Credentials</p>\n                                    <CardBody>\n                                        <CustomInput\n                                            labelText=\"Username\"\n                                            id=\"username\"\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                            inputProps={{\n                                                onChange: (event) => setUsername(event.target.value),\n                                                type: \"text\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <People className={classes.inputIconsColor} />\n\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n\n                                        />\n                                        <CustomInput\n                                            labelText=\"Password\"\n                                            id=\"pass\"\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                            inputProps={{\n                                                onChange: (event) => setPassword(event.target.value),\n                                                type: \"password\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Icon className={classes.inputIconsColor}>\n                                                            lock_outline\n                                                        </Icon>\n                                                    </InputAdornment>\n                                                ),\n                                                autoComplete: \"off\",\n                                            }}\n                                        />\n                                    </CardBody>\n                                    <CardFooter className={classes.cardFooter}>\n                                        <Button simple color=\"primary\" size=\"lg\" onClick={submitData}>\n                                            Login\n                                        </Button >\n                                    </CardFooter>\n                                </form>\n                            </Card>\n                        </GridItem>\n                    </GridContainer>\n                </div>\n \n            </div>\n            {/* <prev >{JSON.stringify(username, null, 2)}</prev>\n            <prev>{JSON.stringify(password, null, 2)}</prev>\n            <prev>{JSON.stringify(valid, null, 2)}</prev> */}\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}